version: '3.8'

services:
  neo4j:
    container_name: neo4j
    hostname: repograph-database
    image: neo4j:5.4.0-enterprise
    restart: always
    ports:
      - '7474:7474'
      - '7687:7687'
    environment:
      - NEO4J_AUTH=neo4j/s3cr3t
      - NEO4J_dbms_security_auth__minimum__password__length=1
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
    volumes:
      - ./.neo4j/data:/data
      - ./.neo4j/import:/import
      - ./.neo4j/logs:/logs
      - ./.neo4j/plugins:/plugins
    networks:
      - repograph-network
    healthcheck:
      test: "exit 0"

  repograph-backend:
    container_name: repograph-backend
    build:
      context: backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./backend/repograph:/code/repograph
      - ./.sqlite:/code/sqlite
      - ./.cache:/root/.cache
      - ./.nltk:/nltk_data
    networks:
      - repograph-network
    depends_on:
      neo4j:
        condition: service_healthy
    links:
      - neo4j

  repograph-frontend:
    container_name: repograph-frontend
    build:
      context: frontend
      dockerfile: Dockerfile
    ports:
        - '8080:8080'
    networks:
      - repograph-network
    links:
      - repograph-backend

volumes:
  neo4j:
    driver: local

networks:
  repograph-network:
    driver: bridge
